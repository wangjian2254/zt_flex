<?xml version="1.0" encoding="utf-8"?>
<control:CBorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
						  xmlns:s="library://ns.adobe.com/flex/spark" 
						  xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:control="control.*" borderVisible="false" backgroundAlpha="0" width="900" height="300" xmlns:uicontrol="uicontrol.*" >
	<control:layout>
		<s:BasicLayout/>
	</control:layout>
	<fx:Script>
		<![CDATA[
			import events.CloseEvent;
			
			import httpcontrol.RemoteUtil;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.advancedDataGridClasses.AdvancedDataGridColumn;
			import mx.controls.advancedDataGridClasses.AdvancedDataGridColumnGroup;
			import mx.events.CollectionEvent;
			import mx.events.FlexEvent;
			import mx.events.ItemClickEvent;
			import mx.events.ListEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.AbstractOperation;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectUtil;
			import mx.utils.StringUtil;
			
			import spark.components.CheckBox;
			
			import util.InfoUtil;
			[Bindable]
			public var showLabel:String;
			
			override public function init(e:FlexEvent):void{
				orderbb=ObjectUtil.copy(InfoUtil.orderbhList) as ArrayCollection;
				for each(var item:Object in orderbb){
					item.selected=false;
				}
//				ddbhGrid.addEventListener(CollectionEvent.COLLECTION_CHANGE,bbchange);
//				getAllOrderIsOpen();
//				orderlist=ObjectUtil.copy(InfoUtil.orderList) as ArrayCollection;
//				orderbhlist=ObjectUtil.copy(InfoUtil.orderbhList) as ArrayCollection;
//				orderbblist.removeAll();
//				orderbbgrid.init(null);
				datelr.selectedDate=new Date();
			}
			
			override public function closeContainer(e:CloseEvent):void{
				dispatchEvent(e);
				
			}
			
			
			
//			public function getDDBHStr(item:Object, column:AdvancedDataGridColumn):String{
//				for each(var obj:Object in InfoUtil.openOrderBHList){
//					if(obj.id==item.yddbh){
//						return obj.ddbh;
//					}
//				}
//				
//				return "";
//			}
//			public function getZRDDBHStr(item:Object, column:AdvancedDataGridColumn):String{
//				for each(var obj:Object in InfoUtil.openOrderBHList){
//					if(obj.id==item.zrddbh){
//						return obj.ddbh;
//					}
//				}
//				
//				return "";
//			}
//			public function getYWZStr(item:Object, column:AdvancedDataGridColumn):String{
//				for each(var obj:Object in InfoUtil.siteList){
//					if(obj.id==item.ywz){
//						return obj.name;
//					}
//				}
//				
//				return "";
//			}
//			public function getZRWZStr(item:Object, column:AdvancedDataGridColumn):String{
//				for each(var obj:Object in InfoUtil.siteList){
//					if(obj.id==item.zrwz){
//						return obj.name;
//					}
//				}
//				
//				return "";
//			}
//			public function getScxStr(item:Object, column:AdvancedDataGridColumn):String{
//				for each(var obj:Object in InfoUtil.codeList){
//					if(obj.id==item.code){
//						for each(var obj1:Object in InfoUtil.scxList){
//							if(obj1.id==obj.scx){
//								return obj1.name;
//							}
//						}
//					}
//				}
//				
//				return "";
//			}
//			public function getCodeStr(item:Object, column:AdvancedDataGridColumn):String{
//				for each(var obj:Object in InfoUtil.codeList){
//					if(obj.id==item.code){
//						return obj.code;
//					}
//				}
//				return "";
//			}
//			public function getCodeNameStr(item:Object, column:AdvancedDataGridColumn):String{
//				for each(var obj:Object in InfoUtil.codeList){
//					if(obj.id==item.code){
//						return obj.name;
//					}
//				}
//				return "";
//			}
//			public function getCodeGGStr(item:Object, column:AdvancedDataGridColumn):String{
//				for each(var obj:Object in InfoUtil.codeList){
//					if(obj.id==item.code){
//						return obj.gg;
//					}
//				}
//				return "";
//			}
			
			//新增，保存，删除的处理函数
			private function clickHander(e:ItemClickEvent):void{
				
				if(e.label=="新增"){
				}
				if(e.label=="保存"){
				}
				if(e.label=="删除"){
				}
				if(e.label=='同步数据'){
//					InfoUtil.orderbhRefresh();
					orderGenZongRefresh();
				}
				if(e.label=='导出数据'){
					
				}
			}
			public function getExcel():void{
				if(query.length>0){
					var nohead:Object =new Object();
					
					////////////////////
					var subname:String;
					var noheadname:String;
					//						var cb:CheckBox=e.currentTarget as CheckBox;
					var cg:AdvancedDataGridColumnGroup;
					var g:AdvancedDataGridColumnGroup;
					var column:AdvancedDataGridColumn;
					//						if(cb!=null){
					for(var i:int=0;i<grid.groupedColumns.length;i++){
						cg=grid.groupedColumns[i] as AdvancedDataGridColumnGroup;
						column=grid.groupedColumns[i] as AdvancedDataGridColumn;
						if(column!=null){
							//									column.visible=cb.selected;
							if(column.visible==false){
								for(var name:String in head){
									if(head[name]==column.headerText){
										nohead[name]=false;
									}
									if(name=="qianxu"||name=="houxu"){
										for(subname in head[name]){
											if(head[name][subname]==column.headerText){
												noheadname=subname.substr(0,subname.length-5);
												nohead[noheadname+"group"]=false;
												nohead[noheadname+"ywznum"]=false;
												nohead[noheadname+"zcnum"]=false;
												nohead[noheadname+"bfnum"]=false;
												nohead[noheadname+"ysnum"]=false;
												nohead[noheadname+"synum"]=false;
												
											}
										}
									}
								}
							}
						}
						
						
						
						
						if(cg!=null){
							for(var k:int=0;k<cg.children.length;k++){
								g=cg.children[k] as AdvancedDataGridColumnGroup;
								column=cg.children[k] as AdvancedDataGridColumn;
								if(column!=null){
									if(column.visible==false){
										for(var name1:String in head){
											if(head[name1]==column.headerText){
												nohead[name1]=false;
											}
											if(name1=="qianxu"||name1=="houxu"){
												for(subname in head[name1]){
													if(head[name1][subname]==column.headerText){
														noheadname=subname.substr(0,subname.length-5);
														nohead[noheadname+"group"]=false;
														nohead[noheadname+"ywznum"]=false;
														nohead[noheadname+"zcnum"]=false;
														nohead[noheadname+"bfnum"]=false;
														nohead[noheadname+"ysnum"]=false;
														nohead[noheadname+"synum"]=false;
														
													}
												}
											}
										}
									}
								}
								if(g!=null){
									if(g.visible==false){
										for(var name2:String in head){
											if(head[name2]==g.headerText){
												nohead[name2]=false;
											}
											if(name2=="qianxu"||name2=="houxu"){
												for(subname in head[name2]){
													if(head[name2][subname]==column.headerText){
														noheadname=subname.substr(0,subname.length-5);
														nohead[noheadname+"group"]=false;
														nohead[noheadname+"ywznum"]=false;
														nohead[noheadname+"zcnum"]=false;
														nohead[noheadname+"bfnum"]=false;
														nohead[noheadname+"ysnum"]=false;
														nohead[noheadname+"synum"]=false;
														
													}
												}
											}
										}
									}
								}
								
							}
						}
					}
					
					
					//						}
					/////////////////////
					
					
					var myDateFormatter:DateFormatter=new DateFormatter();
					myDateFormatter.formatString="YYYYMMDD";
					var op:AbstractOperation=RemoteUtil.getOperation("getWriteExcel");
					op.addEventListener(ResultEvent.RESULT,resultwriteExcel);
					RemoteUtil.openLoading();
					op.send(myDateFormatter.format(datelr.selectedDate),head,nohead,query);
				}else{
					Alert.show("没有数据，不能导出数据。","提示");
				}
				
			}
			
			public function queryreset():void{
//				cbo.setValue("");
				code.setValue("");
			}
			
			public function orderGenZongRefresh():void{
//				bbchange(null);
				var myDateFormatter:DateFormatter=new DateFormatter();
				myDateFormatter.formatString="YYYYMMDD";
				var op:AbstractOperation=RemoteUtil.getOperation("getOrderGenZongByDate");
				op.addEventListener(ResultEvent.RESULT,resultOrderGenZongByDate);
				RemoteUtil.openLoading();
				var ddbh:Array=new Array();
				for each(var item:Object in orderbb){
					if(item.selected==true){
						ddbh.push(item.id);
					}
				}
				op.send(myDateFormatter.format(datelr.selectedDate),ddquerytype.selectedValue,ddbh,code.data,isaction.selected);
			}
			
			public function resultOrderGenZongByDate(e:ResultEvent):void{
				if(e.result.success){
					grid.visible=true;
					grid.groupedColumns=new Array();
					headBox.removeAllElements();
					var w:int=0;
					head=e.result.result.head;
					var g:AdvancedDataGridColumnGroup;
					var cg:AdvancedDataGridColumnGroup;
					var column:AdvancedDataGridColumn;
					var key:String;
					var cb:CheckBox;
					for each(var k:String in head.index){
						if(k=="qianxu"||k=="houxu"){
							g=new AdvancedDataGridColumnGroup();
							g.headerText=head[k]['group'];
							grid.groupedColumns.push(g);
							column=new AdvancedDataGridColumn();
							column.dataField=head[k]["index"][0];
							column.headerText=head[k][column.dataField];
							column.width=90;
							w+=column.width;
							g.children.push(column);
							for(var i:int=1;i<head[k]["index"].length;i++){
								key=head[k]["index"][i];
								if(key.indexOf("group")!=-1){
									cg=new AdvancedDataGridColumnGroup();
									cg.headerText=head[k][key];
									
									cb=new CheckBox();
									cb.label=cg.headerText;
									cb.selected=true;
									cb.addEventListener(Event.CHANGE,changeHead);
									headBox.addElement(cb);
									
									g.children.push(cg);
								}else{
									column=new AdvancedDataGridColumn();
									column.dataField=key;
									column.headerText=head[k][key];
									column.width=60;
									w+=column.width;
									cg.children.push(column);
								}
							}
								
							continue;
						}
						
						column=new AdvancedDataGridColumn();
						column.dataField=k;
						column.headerText=head[k];
						if(column.headerText.length>5){
							column.width=120;
						}else{
							column.width=90;
						}
						
						w+=column.width;
						cb=new CheckBox();
						cb.label=column.headerText;
						cb.selected=true;
						cb.addEventListener(Event.CHANGE,changeHead);
						headBox.addElement(cb);
							
						grid.groupedColumns.push(column);
					}
					grid.minWidth=w;
					query.removeAll();
					query.addAll(new ArrayCollection(e.result.result.query as Array));
				}
			}
			
			private function changeHead(e:Event):void{
				var cb:CheckBox=e.currentTarget as CheckBox;
				var cg:AdvancedDataGridColumnGroup;
				var g:AdvancedDataGridColumnGroup;
				var column:AdvancedDataGridColumn;
				if(cb!=null){
					for(var i:int=0;i<grid.groupedColumns.length;i++){
						cg=grid.groupedColumns[i] as AdvancedDataGridColumnGroup;
						column=grid.groupedColumns[i] as AdvancedDataGridColumn;
						if(column!=null&&column.headerText==cb.label){
							column.visible=cb.selected;
						}
						if(cg!=null){
							for(var k:int=0;k<cg.children.length;k++){
								g=cg.children[k] as AdvancedDataGridColumnGroup;
								column=cg.children[k] as AdvancedDataGridColumn;
								if(column!=null&&column.headerText==cb.label){
									column.visible=cb.selected;
								}
								if(g!=null&&g.headerText==cb.label){
									g.visible=cb.selected;
									
								}
								
							}
						}
							
					}
				}
			}
			public function resultwriteExcel(e:ResultEvent):void{
				if(e.result.success){
					var url:String=e.result.result;  
					var request:URLRequest=new URLRequest(url);  
					navigateToURL(request);  
				}
			}
			
			private var genzongWin:GenZongByZYDH=null;
			/**
			 *点击单元格产生 查看作业单号剩余的事件 
			 **/
			public function getZYDHData(e:ListEvent):void{
				var column:AdvancedDataGridColumn=grid.columns[e.columnIndex];
				if(column.dataField.indexOf("synum")==-1){
					return;
				}
				var l:ArrayCollection=grid.dataProvider as ArrayCollection;
				var item:Object=l.getItemAt(e.rowIndex);
//				Alert.show(item[column.dataField],column.headerText);
				var isCreat:Boolean=false;
				if(genzongWin==null){
					genzongWin=new GenZongByZYDH();
					
					isCreat=true;
				}
				genzongWin.orderlist_id=item["orderlist_id"];
				genzongWin.site=Number(column.dataField.substring(2,column.dataField.length-5));
				if(!isCreat){
					genzongWin.init();
				}
				PopUpManager.addPopUp(genzongWin,this,false);
				if(isCreat){
					PopUpManager.centerPopUp(genzongWin);
				}
			}
			
			
			
			[Bindable]
			public var doflag:Boolean=false;
			
			[Bindable]
			public var head:Object=new Object();
			[Bindable]
			public var query:ArrayCollection=new ArrayCollection();
			
			[Bindable]
			public var orderisopenlist:ArrayCollection=new ArrayCollection();
			
			[Bindable]
			public var orderbb:ArrayCollection=new ArrayCollection();
			[Bindable]
			[Embed("assets/img/toolbg.png")]
			public var toolbgimg:Class;
			[Bindable]
			[Embed("assets/img/save.png")]
			public var saveimg:Class;
			[Bindable]
			[Embed("assets/img/add.png")]
			public var addimg:Class;
			[Bindable]
			[Embed("assets/img/del.png")]
			public var delimg:Class;
			[Bindable]
			[Embed("assets/img/refresh.png")]
			public var refreshimg:Class;
			[Bindable]
			private var buttonArr:ArrayCollection=new ArrayCollection([{'label':'新增','ico':addimg},{'label':'保存','ico':saveimg},{'label':'删除','ico':delimg},{'label':'同步数据','ico':refreshimg},{'label':'导出数据','ico':refreshimg}]);
			
			public var orderAndCodeMap:Object=new Object();
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:RadioButtonGroup id="ddquerytype" >
			
		</s:RadioButtonGroup>
	</fx:Declarations>
	<s:HGroup top="8" right="8" bottom="8" left="8" gap="7">
		<!--<s:BorderContainer width="400" height="100%"  borderVisible="false" color="0x333333" skinClass="skins.contentBoxSkin">	
			<mx:DataGrid id="orderbhgrid" dataProvider="{InfoUtil.orderbhList}" width="100%" height="100%">
				<mx:columns>
					<mx:DataGridColumn dataField="ddbh" headerText="订单编号" width="150">
					</mx:DataGridColumn>
					<mx:DataGridColumn dataField="bzname" headerText="订单描述">
					</mx:DataGridColumn>
				</mx:columns>
			</mx:DataGrid>
		</s:BorderContainer>-->
		<s:BorderContainer width="100%" height="100%"  borderVisible="false" color="0x333333" skinClass="skins.contentBoxSkin">	
			<s:layout>
				<s:VerticalLayout gap="5" paddingTop="5" paddingLeft="5" paddingRight="5">
					
				</s:VerticalLayout>
			</s:layout>
				<s:BorderContainer id="codeAreaContainer" width="100%" top="0" height="65" backgroundAlpha="0" borderVisible="true" borderAlpha="0.6"  >
					<s:layout>
						<s:HorizontalLayout gap="10" paddingLeft="10" horizontalAlign="left" verticalAlign="middle">
							
						</s:HorizontalLayout>
					</s:layout>
					<s:Label text="日期:"/>
					<mx:DateField id="datelr" width="100" >
						
					</mx:DateField>
					<s:BorderContainer width="90" height="100%" borderVisible="false">
						<s:layout>
							<s:VerticalLayout verticalAlign="middle">
								
							</s:VerticalLayout>
						</s:layout>
						<s:RadioButton groupName="ddquerytype" selected="true" value="open" label="未关闭订单">
							
						</s:RadioButton>
						<s:RadioButton groupName="ddquerytype" value="close" label="已关闭订单">
							
						</s:RadioButton>
					</s:BorderContainer>
					
					<s:CheckBox label="只显示选中的订单" id="cbox">
						
					</s:CheckBox>
					
					<mx:DataGrid id="ddbhGrid" dataProvider="{orderbb}" editable="true" height="100%" width="200"  >
						<mx:columns>
							<mx:DataGridColumn dataField="selected" headerText="选择" editorDataField="selected" rendererIsEditor="true" width="60">
								<mx:itemRenderer>
									<fx:Component>
										<mx:HBox horizontalAlign="center">
											<fx:Script>
												<![CDATA[
													public function get selected():Boolean{
														return cb.selected;
													}
													public function set selected(value:Boolean):void{
														cb.selected=value;
													}
												]]>
											</fx:Script>
											<mx:CheckBox id="cb" selected="{data.selected}" >
											</mx:CheckBox>
										</mx:HBox>
									</fx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
							<mx:DataGridColumn dataField="ddbh" headerText="订单编号" editable="false">
								
							</mx:DataGridColumn>
						</mx:columns>
					</mx:DataGrid>
					
					<s:Label text="物料代码:"/>
					<uicontrol:FliterComboBox id="code" dataProvider="{InfoUtil.codeList}" labelField="code" valueField="id" width="100" styleName="fliterComboBox" dropdownWidth="200">
						
					</uicontrol:FliterComboBox>
					<s:Button label="查询" click="orderGenZongRefresh()">
					</s:Button>
					<s:Button label="导出数据" click="getExcel()">
					</s:Button>
					<s:Button label="重置" click="queryreset()">
					</s:Button>
					<s:CheckBox label="拉长查询界面" id="cboH" change="cboH.selected?codeAreaContainer.height+=200:codeAreaContainer.height-=200;">
					</s:CheckBox>
					<s:CheckBox label="不显示禁用的位置" id="isaction" selected="true" >
					</s:CheckBox>
				</s:BorderContainer>
			<s:Scroller width="100%" height="40" left="5" right="5">
				<s:Group width="100%" height="100%">
				<s:BorderContainer id="headBox"  height="40" backgroundAlpha="0" borderVisible="false" >
					<s:layout>
						<s:HorizontalLayout gap="10" paddingLeft="10" horizontalAlign="left" verticalAlign="top">
							
						</s:HorizontalLayout>
					</s:layout>
					
				</s:BorderContainer>
				</s:Group>
			</s:Scroller>
			
				<s:Scroller width="100%" height="100%">
					<s:Group width="100%" height="100%">
					<mx:AdvancedDataGrid id="grid" dataProvider="{query}" selectionMode="singleCell" itemClick="getZYDHData(event)" visible="false"  height="100%">
						<mx:groupedColumns>
							
						</mx:groupedColumns>
					</mx:AdvancedDataGrid>	
					</s:Group>
				</s:Scroller>
			
			
		</s:BorderContainer>
	</s:HGroup>
</control:CBorderContainer>
