<?xml version="1.0" encoding="utf-8"?>
<control:CBorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
						  xmlns:s="library://ns.adobe.com/flex/spark" 
						  xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:control="control.*" borderVisible="false" backgroundAlpha="0" width="900" height="300" xmlns:uicontrol="uicontrol.*">
	<control:layout>
		<s:BasicLayout/>
	</control:layout>
	<fx:Script>
		<![CDATA[
			import events.CloseEvent;
			
			import httpcontrol.RemoteUtil;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.events.ItemClickEvent;
			import mx.rpc.AbstractOperation;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectUtil;
			
			import util.InfoUtil;
			[Bindable]
			public var showLabel:String;
			
			override public function init(e:FlexEvent):void{
				scxlist=ObjectUtil.copy(InfoUtil.scxList) as ArrayCollection;
				scxgrid.init(null);
			}
			
			override public function closeContainer(e:CloseEvent):void{
				dispatchEvent(e);
				
			}
			
			//新增，保存，删除的处理函数
			private function clickHander(e:ItemClickEvent):void{
				if(e.label=="新增"){
					add();
				}
				if(e.label=="保存"){
					save();
				}
				if(e.label=="删除"){
					del();
				}
				if(e.label=='同步数据'){
					InfoUtil.scxRefresh(refreshScx);
				}
			}
			
			public function add():void{
				var v:Object=new Object;
				v.columnIndex=1;
				v.rowIndex=this.scxlist.length-1;
				scxgrid.editedItemPosition=v;
			}
			public function del():void{
				var scxArr:ArrayCollection=new ArrayCollection();
				var obj:Object;
				var item:Object;
				for(var i:int=scxlist.length-1;i>=0;i--){
					item=scxlist.getItemAt(i);
					if(!item.selected){
						continue;
					}
					obj=new Object();
					if(item.hasOwnProperty("id")){
						obj.id=item.id;
						scxArr.addItem(obj);
					}else{
						scxlist.removeItemAt(scxlist.getItemIndex(item));
					}
//					obj.name=item.name;
					
				}
				if(scxArr.length>0){
					var op:AbstractOperation=RemoteUtil.getOperation("delScx");
					op.addEventListener(ResultEvent.RESULT,refresh);
					RemoteUtil.openLoading();
					op.send(scxArr);
				}
			}
			
			public function save():void{
				var scxArr:ArrayCollection=new ArrayCollection();
				var obj:Object;
				for each(var item:Object in scxlist){
					if(!item.hasOwnProperty("isModfy")){
						continue;
					}
					if(item.name==""){
						continue;
					}
					obj=new Object();
					if(item.hasOwnProperty("id")){
						obj.id=item.id;
					}
					obj.name=item.name;
					scxArr.addItem(obj);
				}
				if(scxArr.length>0){
					var op:AbstractOperation=RemoteUtil.getOperation("saveScx");
					op.addEventListener(ResultEvent.RESULT,refresh);
					RemoteUtil.openLoading();
					op.send(scxArr);
//					RemoteUtil.send(op,scxArr);
				}
			}
			
			public function refresh(e:ResultEvent):void{
				if(e.result.success){
					InfoUtil.scxRefresh(refreshScx);
				}
			}
			
			public function refreshScx(e:ResultEvent):void{
				if(e.result.success){
					init(null);
				}
			}
			
			[Bindable]
			public var scxlist:ArrayCollection;
			[Bindable]
			[Embed("assets/img/toolbg.png")]
			public var toolbgimg:Class;
			[Bindable]
			[Embed("assets/img/save.png")]
			public var saveimg:Class;
			[Bindable]
			[Embed("assets/img/add.png")]
			public var addimg:Class;
			[Bindable]
			[Embed("assets/img/del.png")]
			public var delimg:Class;
			[Bindable]
			[Embed("assets/img/refresh.png")]
			public var refreshimg:Class;
			[Bindable]
			private var buttonArr:ArrayCollection=new ArrayCollection([{'label':'保存','ico':saveimg},{'label':'新增','ico':addimg},{'label':'同步数据','ico':refreshimg}]);
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:HGroup top="8" right="8" bottom="8" left="8" gap="7">
		<s:BorderContainer width="100%" height="100%"  borderVisible="false" color="0x333333" skinClass="skins.contentBoxSkin">	
			<s:BorderContainer left="0" top="0" height="45" width="100%" borderVisible="false" backgroundImage="{toolbgimg}">
				<s:layout>
					<s:BasicLayout>
						
					</s:BasicLayout>
				</s:layout>
				<mx:ButtonBar dataProvider="{buttonArr}" doubleClickEnabled="true"  chromeColor="#faf0cc"  labelField="label" iconField="ico"  height="30" top="7" bottom="7" left="10" itemClick="clickHander(event);">
					
				</mx:ButtonBar>
				
			</s:BorderContainer>
			<uicontrol:MarkAdvancedDataGrid id="scxgrid" dataProvider="{scxlist}"  isNewAdd="true" enabled="true" editable="true" top="46" bottom="0" right="0" left="0">
				<uicontrol:columns>
					<mx:AdvancedDataGridColumn headerText="选择" dataField="selected"  sortable="false" width="60"  editorDataField="selected" rendererIsEditor="true" >
						<mx:itemRenderer>
							<fx:Component>
								<mx:HBox horizontalAlign="center">
									<fx:Script>
										<![CDATA[
											public function get selected():Boolean{
												return cb.selected;
											}
											public function set selected(value:Boolean):void{
												cb.selected=value;
											}
										]]>
									</fx:Script>
									
									<mx:CheckBox id="cb" selected="{data.selected}" >
										
									</mx:CheckBox>
								</mx:HBox>
							</fx:Component>
						</mx:itemRenderer>
					</mx:AdvancedDataGridColumn>
					
					<mx:AdvancedDataGridColumn headerText="生产线"  dataField="name"  >
						
					</mx:AdvancedDataGridColumn>
				</uicontrol:columns>
				
			</uicontrol:MarkAdvancedDataGrid>
			
		</s:BorderContainer>
	</s:HGroup>
	
</control:CBorderContainer>
