<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="300"
		 implements="mx.controls.listClasses.IDropInListItemRenderer,mx.managers.IFocusManagerComponent" xmlns:uicontrol="uicontrol.*"
		 >
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.dataGridClasses.DataGridListData;
			import mx.controls.listClasses.BaseListData;
			import mx.core.INavigatorContent;
			
			import util.InfoUtil;
			private var _listData:DataGridListData;
			// Define a property for returning the new value to the cell.
			[Bindable]
			private var _value:Object;  
			
			[Bindable]
			private var list:ArrayCollection=new ArrayCollection();
			
			// Implement the drawFocus() method for the VBox.
			override public function drawFocus(draw:Boolean):void {
				//											outerDocument.getMacAll();
				cbo.setFocus();
				cbo.open();
				
			}
			
			public function refresh():void{
				if(_value.hasOwnProperty("code")&&InfoUtil.codeToBHlistObj.hasOwnProperty("code"+_value.code)){
					list=InfoUtil.codeToBHlistObj["code"+_value.code];
					return;
				}
				list.removeAll();
				var ddbh:String=",";
				for each(var item:Object in InfoUtil.openOrderList){
					if(!_value.hasOwnProperty("code")||_value.code==""||_value.code==null||_value.code==item.code){
						if(ddbh.indexOf(","+item.ddbh+",")==-1){
							list.addItem(item);
						}
						
					}else{
						continue;
					}
					ddbh+=item.ddbh+",";
				}
				InfoUtil.codeToBHlistObj["code"+_value.code]=list;
			}
			
			override public function get data():Object {
				if(cbo==null){
					return super.data;
				}else{
					if(cbo.selectedIndex==-1){
						for each(var it:Object in cbo.dataProvider){
							if(it[cbo.labelField]==cbo.data||it[cbo.valueField]==cbo.data){
								return it[cbo.valueField]
							}
						}
						return null;
					}
					return cbo.data;
				}
			}            
			
			override public function set data(value:Object):void {
				super.data=value[_listData.dataField];
				_value=value;
				changeFilterValue();
				cbo.setValue(value[_listData.dataField]);
				
				//												
				
			} 
			
			public function get listData():BaseListData
			{
				return _listData;
			}
			
			public function set listData(value:BaseListData):void
			{
				_listData = DataGridListData(value);
				cbo.listData = DataGridListData(value);
			}
			
			public function changeCode():void{
				if(cbo.selectedItem==null){
					return;
				}
				//												
				if(_value['zrddbh']==null||_value['zrddbh']==""){
					_value["zrddbh"]=cbo.selectedItem.id;
				}
				if(_value['zydh']!=null||_value['zydh']!=""){
					_value["zydh"]="";
				}
				if(_listData.dataField =="yddbh"){
					InfoUtil.orderlistToOrderbhRefresh(cbo.selectedItem.id);
					for each(var item:Object in InfoUtil.siteList){
						if(item.type=='3'){
							continue;
						}
						if(!_value.hasOwnProperty("qxddbh"+item.id)||!_value["qxddbh"+item.id]){
							_value["qxddbh"+item.id]=cbo.selectedItem.id;
						}
					}
				}
				
			}
			
			public function changeFilterValue():void{
				if(cbo.filtervalue!=_value.code){
					cbo.filtervalue=_value.code;
					refresh();
				}
			}
			
		]]>
	</fx:Script>
	<uicontrol:FliterComboBox id="cbo"  dataProvider="{list}"   labelField="ddbhstr" valueField="id" change="changeCode()" height="{this.height}" width="{this.width}" styleName="fliterComboBox" dropdownWidth="200">
		
	</uicontrol:FliterComboBox>
</mx:HBox>
