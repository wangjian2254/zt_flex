<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" creationComplete="init()"  minWidth="955" minHeight="600" skinClass="skins.ApplicationSkinBlue" xmlns:httpcontrol="httpcontrol.*" xmlns:control="control.*" xmlns:uicontrol="uicontrol.*">
	<fx:Style source="assets/customrControls.css">
		
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import control.CBorderContainer;
			import control.ChangePassword;
			import control.Code;
			import control.Order;
			import control.OrderBBDetailQuery;
			import control.OrderBBEdit;
			import control.OrderBBQuery;
			import control.OrderMonitor;
			import control.People;
			import control.Scx;
			import control.Site;
			import control.Welcome;
			
			import httpcontrol.RemoteUtil;
			
			import model.User;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.Menu;
			import mx.events.MenuEvent;
			import mx.managers.PopUpManager;
			import mx.messaging.ChannelSet;
			import mx.messaging.channels.AMFChannel;
			import mx.rpc.AbstractOperation;
			import mx.rpc.AsyncResponder;
			import mx.rpc.AsyncToken;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import util.InfoUtil;
			import util.LoadingUtil;
			import util.UserUtil;
			public function init():void{
				LoadingUtil.loading=loading;
				var operation:AbstractOperation=RemoteUtil.getOperation("getUser");
				operation.addEventListener(ResultEvent.RESULT, resultUser);
				RemoteUtil.openLoading();
				operation.send();
				InfoUtil.init();
				
				var operation1:AbstractOperation=RemoteUtil.getOperation("userhaschange");
				operation1.addEventListener(ResultEvent.RESULT, resulthaschange);
				RemoteUtil.openLoading();
				operation1.send();
				
			}
			private function resulthaschange(evt:ResultEvent, token:Object=null):void{
				if(evt.result.success==true){
					if(evt.result.result){
						var event:MenuEvent=new MenuEvent(MenuEvent.CHANGE);
						var xml:XML=new XML("<menuitem label='欢迎' mod='welcome'></menuitem>");
//						xml.label="欢迎";
//						xml.mod="welcome";
						event.item=xml; 
						onMenuChange(event);
					}else{
						var event1:MenuEvent=new MenuEvent(MenuEvent.CHANGE);
						var xml1:XML=new XML("<menuitem label='日报表录入' mod='orderbblr'></menuitem>");
						event1.item=xml1; 
						onMenuChange(event1);
					}
					
				}
			}
			private function resultUser(evt:ResultEvent, token:Object=null):void{
				if(evt.result.success==true){
					var user:User=new User();
					user.id=evt.result.result.id;
					user.username=evt.result.result.username;
					user.fullname=evt.result.result.last_name+evt.result.result.first_name;
					user.user_permissions=new ArrayCollection(evt.result.result.user_permissions as Array);
					user.groups=new ArrayCollection(evt.result.result.groups as Array);
					UserUtil.user=user;
				}
				
			}
			
			
			private function getOrderAllBBNo():void{
				
				//				remoteObject.addEventListener(SecurityErrorEvent.SECURITY_ERROR, onRemoteServiceFault);
				var operation:AbstractOperation = RemoteUtil.getOperation('getOrderAllBBNo');
				operation.addEventListener(ResultEvent.RESULT, resultOrderAllBBNo);
				var obj:Object=new Object();
				obj['date']='20120622';
				//				Alert.show(obj.date);
				RemoteUtil.openLoading();
				operation.send(obj['date'],1);
			}
			
			[Bindable]
			public var orderBBNoList:ArrayCollection;
			private function resultOrderAllBBNo(evt:ResultEvent, token:Object=null):void{
				if(evt.result.success==true){
					orderBBNoList=new ArrayCollection(evt.result.result as Array);
				}
				
			}
			private function iconFun(item:Object):Class{
				var xml:XML=item as XML;
				switch(xml.attribute('mod').toString()){
					
					//					case 'guanLi3':
					//						return this.imgcz;
					//						break;
				}
				return null;
			}
			
			private var myMenu:Menu=new Menu();
			private var menuflag:String;
			protected function showHandler(event:MouseEvent):void
			{
				var btn:Button=event.currentTarget as Button;
				
				var menudata:XML;
				if(btn.label=='基础信息'){
					menudata=myMenu1;
				}
				if(btn.label=='日报表管理'){
					menudata=myMenu2;
				}
				if(btn.label=='订单追踪'){
					menudata=myMenu3;
				}
				
				
				if(myMenu!=null){
					if(menuflag==btn.label){
						return;
					}
					myMenu.hide();
					myMenu=null;
					menuflag=btn.label;
				}
				
				
				
				myMenu = Menu.createMenu(null,menudata, false);
				myMenu.labelField="@label";
				myMenu.setStyle('font-family','黑体');
				myMenu.setStyle('chromeColor','#dce2e7');
				myMenu.iconFunction=iconFun;
				myMenu.show(menuContainer.left+event.currentTarget.x, menuContainer.top+event.currentTarget.y+event.currentTarget.height);
				myMenu.addEventListener(MouseEvent.CLICK,hideHandler);
				myMenu.addEventListener(MenuEvent.CHANGE,onMenuChange);
			}
			
			protected function hideHandler(event:MouseEvent):void
			{
				//				if(myMenu!=null){
				//					
				//					myMenu.hide();
				//					myMenu=null;
				//				}
				menuflag=null;
			}
			
			protected function onMenuChange(event:MenuEvent):void
			{
				menuflag=null;
				var xml:XML=event.item as XML;
				var mod:String=xml.attribute('mod').toString();
				website.text=xml.attribute('label').toString();
				if(cbar.setView(mod)){
					return;
				}
				var c:CBorderContainer;
				switch(mod){
					case 'people':
						c=new People();
						c.label=xml.attribute('label').toString();
						c.flag=mod;
						break;
					case 'scx':
						c=new Scx();
						c.label=xml.attribute('label').toString();
						c.flag=mod;
						break;
					case 'code':
						c=new Code();
						c.label=xml.attribute('label').toString();
						c.flag=mod;
						break;
					case 'site':
						c=new Site();
						c.label=xml.attribute('label').toString();
						c.flag=mod;
						break;
					case 'order':
						c=new Order();
						c.label=xml.attribute('label').toString();
						c.flag=mod;
						break;
					case 'orderbblr':
						c=new OrderBBEdit();
						c.label=xml.attribute('label').toString();
						c.flag=mod;
						break;
					case 'orderquery':
						c=new OrderBBQuery();
						c.label=xml.attribute('label').toString();
						c.flag=mod;
						break;
					case 'ordermonitor':
						c=new OrderMonitor();
						c.label=xml.attribute('label').toString();
						c.flag=mod;
						break;
					case 'orderbbdetailquery':
						c=new OrderBBDetailQuery();
						c.label=xml.attribute('label').toString();
						c.flag=mod;
						break;
					case 'welcome':
						c=new Welcome();
						c.closeEnable=false;
						c.label=xml.attribute('label').toString();
						c.flag=mod;
						break;
				}
				if(c!=null){
					cbar.addView(c);
				}
				
			}
			
			public function logout():void{
				var url:String="/accounts/logout/";  
				var request:URLRequest=new URLRequest(url);  
				navigateToURL(request,"_self");  
			}
			
			public function repassword():void{
				var changepassword:ChangePassword=ChangePassword(PopUpManager.createPopUp( 
					this, ChangePassword , true) as spark.components.TitleWindow);
				changepassword.x=(this.width-changepassword.width)/2;
				changepassword.y=(this.height-changepassword.height)/2;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<fx:XML format="e4x" id="myMenu1">
			<root>
				<menuitem label="人员管理" mod='people'>
				</menuitem>
				<menuitem label="生产线管理" mod='scx'>
				</menuitem>
				<menuitem label="物料管理" mod='code'>
				</menuitem>
				<menuitem label="位置管理" mod='site'>
				</menuitem>
				<menuitem label="订单管理管理" mod='order'>
				</menuitem>
			</root>
		</fx:XML>
		<fx:XML format="e4x" id="myMenu2">
			<root>
				<menuitem label="日报表录入" mod='orderbblr'>
				</menuitem>
				<menuitem label="日报表修改" mod='orderquery'>
				</menuitem>
				<menuitem label="日报表查询" mod='orderbbdetailquery'>
				</menuitem>
			</root>
		</fx:XML>
		<fx:XML format="e4x" id="myMenu3">
			<root>
				<menuitem label="订单追踪" mod='ordermonitor'>
					
				</menuitem>
				
			</root>
		</fx:XML>
	</fx:Declarations>
	<fx:Style source="assets/style.css"/>
	<s:Group id="header" width="100%" height="109">
		<s:layout>
			<s:BasicLayout/>
		</s:layout>
		<s:Image source="assets/logo.png" x="15" y="15"/>
		
		
		<s:Group top="12" right="15" visible="true">
			<s:layout>
				<s:HorizontalLayout gap="20" verticalAlign="middle"/>
			</s:layout>	
			<s:Label text="用户名:{UserUtil.user.username} | 用户:{UserUtil.user.fullname}" styleName="textStyle2"/>	
			<s:SkinnableContainer  height="26"  skinClass="skins.topLinksBoxSkin" visible="true">
				<s:layout>
					<s:HorizontalLayout gap="0" verticalAlign="middle"/>
				</s:layout>
				<!--<mx:LinkButton x="0" y="2" height="25" label="切换分支" styleName="textStyle1"/>
				<s:Label text="|" styleName="textStyle1"/>
				<mx:LinkButton x="0" y="2" height="25" label="重新选择帐套" styleName="textStyle1"/>
				<s:Label text="|" styleName="textStyle1"/>-->
				<mx:LinkButton x="0" y="2" height="25" label="登出"  styleName="textStyle1" click="logout()"/>
				<s:Label text="|" styleName="textStyle1"/>
				<mx:LinkButton x="0" y="2" height="25" label="修改密码" styleName="textStyle1" click="repassword()"/>
			</s:SkinnableContainer>
					
		</s:Group>
		
		<s:Group left="20" right="0" top="48" id="menuContainer" height="29" >
			<s:layout>
				<s:HorizontalLayout gap="-1" verticalAlign="middle"/>
			</s:layout>	
			<s:Button width="130" height="29" label="基础信息" styleName="menuBtn" mouseOver="showHandler(event)"/>
			<s:Button width="130" height="29" label="日报表管理" styleName="menuBtn" mouseOver="showHandler(event)"/>
			<s:Button width="130" height="29" label="订单追踪" styleName="menuBtn" mouseOver="showHandler(event)"/>
		</s:Group>	
		
		<s:SkinnableContainer  height="28" top="77" left="0" right="0" skinClass="skins.locGroupSkin" id="locGroup" visible="true">
			<s:layout>
				<s:BasicLayout/>
			</s:layout>
			<s:Label text="当前位置： " left="20" top="8" styleName="textStyle3"/>
			<s:Label id="website" left="85" top="8" styleName="textStyle3"/>
			<mx:LinkButton label="重置页面" visible="false" top="3" right="12" color="0x353535"/>
		</s:SkinnableContainer>		
	</s:Group>
	
	<mx:ViewStack id="gongNengStack" top="105" left="0" right="0" bottom="33"  borderVisible="false" creationComplete="trace('view stack')"  >
		
		
		
	</mx:ViewStack>
	
	<uicontrol:CTabBar id="cbar" dataProvider="{gongNengStack}" left="2" right="2" width="100%" bottom="1" height="31" borderVisible="false"  creationComplete="trace('tabbar')">
		
	</uicontrol:CTabBar>
	<control:Loading id="loading" width="100%" height="100%" visible="false">
		
	</control:Loading>
</s:Application>

